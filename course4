from bs4 import BeautifulSoup
import requests
import telebot
from telebot import types
from decimal import Decimal

headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 6.1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36'
    }
cliend = telebot.TeleBot('1691244388:AAH8X6HYfxgOcbfxxN_pyu5E2eMLqRP6aZg')

text_cours = []
allcours = []
key = {"usd":0,"doge":0,"eur":0,"jpy":0,"krw":0,"cny":0,"uah":0,"byn":0,"kzt":0}
count = {"k":0}

@cliend.message_handler(commands=['start'])
def start(message):
    rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rmk.add(types.KeyboardButton('USD 🇺🇸'),types.KeyboardButton('🐕 Doge 🐕'),types.KeyboardButton('EUR 🇪🇺')).add(types.KeyboardButton('JPY 🇯🇵'),types.KeyboardButton('KRW 🇰🇷'),types.KeyboardButton('CNY 🇨🇳')).add(types.KeyboardButton('UAH 🇺🇦'),types.KeyboardButton('BYN 🇧🇾'),types.KeyboardButton('KZT 🇰🇿')).add(types.KeyboardButton('Калькулятор'))

    msg = cliend.send_message(message.chat.id, 'Посмотреть курс',reply_markup=rmk)
    cliend.register_next_step_handler(msg,courses)

@cliend.message_handler(content_types = ['text'])
def courses(message):
    if message.text == 'USD 🇺🇸' and count["k"] == 0:
        cours_usd(message)
        cliend.send_message(message.chat.id, key["usd"] + ' RUB')
    elif message.text == '🐕 Doge 🐕' and count["k"] == 0:
        cours_doge(message)
        cliend.send_message(message.chat.id, str(round(float(str(key["doge"]).replace(',','.')),2))  + ' USD')
    elif message.text == 'EUR 🇪🇺' and count["k"] == 0:
        cours_eur(message)
        cliend.send_message(message.chat.id, key["eur"] + ' RUB')
    elif message.text == 'JPY 🇯🇵' and count["k"] == 0:
        cours_jpy(message)
        cliend.send_message(message.chat.id, key["jpy"] + ' RUB')
    elif message.text == 'KRW 🇰🇷' and count["k"] == 0:
        cours_krw(message)
        cliend.send_message(message.chat.id, key["krw"] + ' RUB')
    elif message.text == 'CNY 🇨🇳' and count["k"] == 0:
        cours_cny(message)
        cliend.send_message(message.chat.id, key["cny"]+ ' RUB')
    elif message.text == 'UAH 🇺🇦' and count["k"] == 0:
        cours_uah(message)
        cliend.send_message(message.chat.id, key["uah"] + ' RUB')
    elif message.text == 'BYN 🇧🇾' and count["k"] == 0:
        cours_byn(message)
        cliend.send_message(message.chat.id, key["byn"] + ' RUB')
    elif message.text == 'KZT 🇰🇿' and count["k"] == 0:
        cours_kzt(message)
        cliend.send_message(message.chat.id, key["kzt"]+ ' RUB')
    elif message.text == 'Вернуться назад':
        start(message)
    elif message.text == 'Калькулятор':
        calculator(message)
    else:
        if count["k"] == 0:
            cliend.send_message(message.chat.id,'Простите, но такой вылюты у нас нет')
            start(message)

def calculator(message):
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('USD 🇺🇸'),types.KeyboardButton('EUR 🇪🇺')).add(types.KeyboardButton('JPY 🇯🇵'),types.KeyboardButton('KRW 🇰🇷'),types.KeyboardButton('CNY 🇨🇳')).add(types.KeyboardButton('UAH 🇺🇦'),types.KeyboardButton('BYN 🇧🇾'),types.KeyboardButton('KZT 🇰🇿')).add(types.KeyboardButton('Вернуться назад'))
        msg = cliend.send_message(message.chat.id, 'Выберите валюту', reply_markup=rmk)
        cliend.register_next_step_handler(msg, cours_cl)

@cliend.message_handler(content_types = ['text'])
def cours_cl(message):
    if message.text == 'Вернуться назад':
        start(message)
    elif message.text == 'USD 🇺🇸':
        count["k"] += 1
        cours_usd(message)
        text_cours.append('USD 🇺🇸')
        allcours.append(key["usd"])
        ch(message)
    elif message.text == 'EUR 🇪🇺':
        count["k"] += 1
        cours_eur(message)
        text_cours.append('EUR 🇪🇺')
        allcours.append(key["eur"])
        ch(message)
    elif message.text == 'JPY 🇯🇵':
        count["k"] += 1
        cours_jpy(message)
        text_cours.append('JPY 🇯🇵')
        allcours.append(key["jpy"])
        ch(message)
    elif message.text == 'KRW 🇰🇷':
        count["k"] += 1
        cours_krw(message)
        text_cours.append('KRW 🇰🇷')
        allcours.append(key["krw"])
        ch(message)
    elif message.text == 'CNY 🇨🇳':
        count["k"] += 1
        cours_cny(message)
        text_cours.append('CNY 🇨🇳')
        allcours.append(key["cny"])
        ch(message)
    elif message.text == 'UAH 🇺🇦':
        count["k"] += 1
        cours_uah(message)
        text_cours.append('UAH 🇺🇦')
        allcours.append(key["uah"])
        ch(message)
    elif message.text == 'BYN 🇧🇾':
        count["k"] += 1
        cours_byn(message)
        text_cours.append('BYN 🇧🇾')
        allcours.append(key["byn"])
        ch(message)
    elif message.text == 'KZT 🇰🇿':
        count["k"] += 1
        cours_kzt(message)
        text_cours.append('KZT 🇰🇿')
        allcours.append(key["kzt"])
        ch(message)
    else:
        cliend.send_message(message.chat.id, 'Простите, но такой вылюты у нас нет')
        calculator(message)
def ch(message):
    rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
    rmk.add(types.KeyboardButton('Вернуться назад'))
    msg = cliend.send_message(message.chat.id, 'Напишите количество валюты', reply_markup=rmk)
    cliend.register_next_step_handler(msg, calcul)

def back_calcu(message):
    if message.text == 'Вернуться на главное меню':
        start(message)
    elif message.text == 'Калькулятор':
        calculator(message)
    elif message.text == '/start':
        start(message)
    else:
        cliend.send_message(message.chat.id, 'Такой команды не существует')

def number(str):
    try:
        float(str)
        return True
    except ValueError:
        return False

def calcul(message):
    c,u = [],[]
    num = message.text
    if num.count(',') == 1:
        num = num.replace(',','.')
    if num == 'Вернуться назад':
        calculator(message)

        text_cours.clear()
        allcours.clear()

        c.clear()
        u.clear()
    elif num.isdigit() == True or number(num) == True:
        rmk = types.ReplyKeyboardMarkup(resize_keyboard=True)
        rmk.add(types.KeyboardButton('Калькулятор'),types.KeyboardButton('Вернуться на главное меню'))

        c.append(float(num))
        u.append(float("".join(allcours[-1])))
        su = c[-1] * u[-1]

        textc = "".join(text_cours[-1])
        msg = cliend.send_message(message.chat.id, num + ' ' + textc + ' = ' + str(su) + ' RUB', reply_markup=rmk)
        cliend.register_next_step_handler(msg, back_calcu)

        text_cours.clear()
        allcours.clear()

        c.clear()
        u.clear()
    elif  num.isdigit() == False:
        cliend.send_message(message.chat.id, 'Пожалуйста,введите число')
        ch(message)
    else:
        cliend.send_message(message.chat.id, 'Такой команды не существует')
    count["k"] = 0
def cours_usd(message):
    url = 'https://www.google.com/search?q=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&oq=%D0%B4%D0%BE%D0%BB%D0%BB%D0%B0%D1%80+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&aqs=chrome..69i57j0l3j0i131i433j0l5.12290j1j7&sourceid=chrome&ie=UTF-8'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    usd_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["usd"] = usd_post

def cours_doge(message):
    url = 'https://ru.investing.com/crypto/dogecoin'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    doge_post = soup.find('span',class_='pid-1061477-last').get_text(strip=True)
    key["doge"] = doge_post

def cours_eur(message):
    url = 'https://www.google.com/search?q=%D0%B5%D0%B2%D1%80%D0%BE+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=m-OoYJnQK86JrwTP54LABw&oq=%D0%B5%D0%B2%D1%80%D0%BE+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMyCggAELEDEEYQggIyAggAMgIIADICCAAyAggAMgIIADICCAAyAggAMgIIADICCAA6BwgAEEcQsAM6BwgAELADEEM6BQgAELEDUJkgWOwpYOMtaAJwAngAgAHiCIgB-xqSAQswLjEuMi42LTIuMZgBAKABAaoBB2d3cy13aXrIAQrAAQE&sclient=gws-wiz&ved=0ahUKEwjZiZvYkN3wAhXOxIsKHc-zAHgQ4dUDCA4&uact=5'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    eur_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["eur"] = eur_post

def cours_jpy(message):
    url = 'https://www.google.com/search?q=%D0%B9%D0%B5%D0%BD%D1%8B+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=ouOoYNyfIYnurgSu1Ym4Dg&oq=%D0%B9%D0%B5%D0%BD%D1%8B+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMyCQgAEEMQRhCCAjIGCAAQBxAeMgIIADIGCAAQBxAeMgYIABAFEB4yBggAEAUQHjIGCAAQBRAeMgYIABAFEB4yBggAEAUQHjIGCAAQBRAeOgcIABBHELADOgcIABCwAxBDOgQIABANOgYIABAKEB46CggAEA0QBRAKEB46CAgAEA0QBRAeOggIABAHEAUQHjoJCAAQDRBGEIICUJCKAVjVswFg97UBaAdwAngBgAH1DIgBhy2SAREwLjkuMS4xLjAuMS4yLjAuMZgBAKABAaoBB2d3cy13aXrIAQrAAQE&sclient=gws-wiz&ved=0ahUKEwjc-LvbkN3wAhUJt4sKHa5qAucQ4dUDCA4&uact=5'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    jpy_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["jpy"] = jpy_post

def cours_krw(message):
    url = 'https://www.google.com/search?q=%D0%B2%D0%BE%D0%BD%D1%8B%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=uuOoYNHxNKGGwPAP2eGKmA0&oq=%D0%B2%D0%BE%D0%BD%D1%8B%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMggIABAHEAoQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeOgcIABBHELADOgcIABCwAxBDUOqLAViLjwFg-JABaAJwAngAgAHJAYgBygOSAQUwLjIuMZgBAKABAaoBB2d3cy13aXrIAQrAAQE&sclient=gws-wiz&ved=0ahUKEwjRtojnkN3wAhUhAxAIHdmwAtMQ4dUDCA4&uact=5'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    krw_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["krw"] = krw_post

def cours_cny(message):
    url = 'https://www.google.com/search?q=%D1%8E%D0%B0%D0%BD%D1%8C+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=8OOoYN2yEeyMrwSQq6nwCw&oq=%D1%8E%D0%B0%D0%BD%D1%8C+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMyBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHjIGCAAQBxAeMgYIABAHEB4yBggAEAcQHlCTDViyD2CCEmgAcAB4AIABtgGIAfcEkgEDMC40mAEAoAEBqgEHZ3dzLXdpesABAQ&sclient=gws-wiz&ved=0ahUKEwjd6sSAkd3wAhVsxosKHZBVCr4Q4dUDCA4&uact=5'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    cny_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["cny"] = cny_post

def cours_uah(message):
    url = 'https://www.google.com/search?q=%D0%B3%D1%80%D0%B8%D0%B2%D0%BD%D0%B0+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=8-OoYMSpFuOtrgTB0rDYBQ&oq=%D0%B3%D1%80%D0%B8%D0%B2%D0%BD%D0%B8%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMYADIECAAQDTIICAAQBxAKEB4yCAgAEAgQDRAeMggIABAIEA0QHjIICAAQCBANEB4yCAgAEAgQDRAeMggIABAIEA0QHjIICAAQCBANEB4yCAgAEAgQDRAeOgcIABBHELADOgYIABAHEB5Q5dUDWMzfA2Df8QNoAnACeACAAYEIiAHjDZIBCTAuNC4xLjctMZgBAaABAaoBB2d3cy13aXrIAQjAAQE&sclient=gws-wiz'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    uah_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["uah"] = uah_post
def cours_byn(message):
    url = 'https://www.google.com/search?q=%D0%B1%D0%B5%D0%BB%D0%BE%D1%80%D1%83%D1%81%D1%81%D0%BA%D0%B8%D0%B9+%D1%80%D1%83%D0%B1%D0%BB%D1%8C+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=NeSoYJ3GEOuTwPAPicKCwA4&oq=%D0%B1%D0%B5%D0%BB%D0%BB%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMYATIECAAQDTIICAAQBxAKEB46BwgAEEcQsAM6BggAEAoQAToECAAQAToGCAAQBxAeUKl3WLZ9YKGMAWgCcAJ4AIAB-AGIAYYGkgEFMC40LjGYAQCgAQGqAQdnd3Mtd2l6yAEIwAEB&sclient=gws-wiz'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    byn_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["byn"] = byn_post
def cours_kzt(message):
    url = 'https://www.google.com/search?q=%D1%82%D0%B5%D0%B3%D0%B5+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&ei=SOSoYIuYCuz2qwGkl6zYCA&oq=%D1%82%D0%B5%D0%B3%D0%B5+%D0%BA+%D1%80%D1%83%D0%B1%D0%BB%D1%8E&gs_lcp=Cgdnd3Mtd2l6EAMyBwgAELEDEEMyBAgAEEMyBAgAEAoyBAgAEAoyBAgAEAoyBAgAEAoyBAgAEAoyBAgAEAoyBAgAEAoyBAgAEAo6BwgAEEcQsAM6BwgAELADEEM6BAgAEA06BggAEAcQHjoGCAAQDRAeOggIABANEAUQHlDmS1ivaGCfamgCcAJ4BIAB7QeIAa0hkgEPMC4zLjIuMC4xLjIuMS4xmAEAoAEBqgEHZ3dzLXdpesgBCsABAQ&sclient=gws-wiz&ved=0ahUKEwiL3Liqkd3wAhVs-yoKHaQLC4sQ4dUDCA4&uact=5'
    res = requests.get(url,headers=headers)
    soup = BeautifulSoup(res.text, 'lxml')
    kzt_post = soup.find('input', class_='a61j6 vk_gy vk_sh Hg3mWc').get('value')
    key["kzt"] = kzt_post

if __name__ == '__main__':
    cliend.polling(none_stop=True, interval= 0)
